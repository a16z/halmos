name: Test

on:
  push:
    branches: [main, chore-workflows]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      halmos-options:
        description: "additional halmos options"
        required: false
        type: string
        default: ""
      pytest-options:
        description: "additional pytest options"
        required: false
        type: string
        default: ""

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest", "ubuntu-latest", "windows-latest"]
        python-version: ["3.11", "3.12"]
        storage-layout: ["solidity", "generic"]
        cache-solver: ["", "--cache-solver"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # note: it is faster to let foundry do a sparse checkout of the missing libraries rather than having the action do a git checkout of the submodules
          submodules: false

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements-dev.txt

      - name: Install halmos
        run: python -m pip install -e .

      - name: Run pytest
        run: pytest -v -k "not long and not ffi" --ignore=tests/lib --halmos-options="-st --disable-gc --solver-threads 1 --storage-layout ${{ matrix.storage-layout }} ${{ matrix.cache-solver }} --solver-timeout-assertion 0 ${{ inputs.halmos-options }}" ${{ inputs.pytest-options }}
