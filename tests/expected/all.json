{
    "exitcode": 1,
    "test_results": {
        "test/Invalid.t.sol:OldCompilerTest": [
            {
                "name": "checkAssert(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkMyAssert(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Arith.t.sol:ArithTest": [
            {
                "name": "checkExp(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkMod(uint256,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/AssertTest.sol:CTest": [
            {
                "name": "checkBar()",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkFoo()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Block.t.sol:BlockCheatCodeTest": [
            {
                "name": "checkChainId(uint64)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkCoinbase(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkDifficulty(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkFee(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkRoll(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarp(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Byte.t.sol:ByteTest": [
            {
                "name": "checkByte(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Byte.t.sol:SymbolicByteTest": [
            {
                "name": "checkSymbolicByteIndex(uint8,uint8)",
                "exitcode": 1,
                "num_models": 2,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Console.t.sol:ConsoleTest": [
            {
                "name": "checkLog()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Const.t.sol:ConstTest": [
            {
                "name": "checkConst()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Const.t.sol:ConstTestTest": [
            {
                "name": "checkConst()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Counter.t.sol:CounterTest": [
            {
                "name": "checkDiv1(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkDiv2(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkFoo(uint256,uint256,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkInc()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkIncBy(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkIncOpt()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoopConst()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoopConstIf()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoopDoWhile(uint8)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoopFor(uint8)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoopWhile(uint8)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkMulDiv(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSet(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSetString(uint256,string,uint256,string,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSetSum(uint248,uint248)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Create.t.sol:CreateTest": [
            {
                "name": "checkConst()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkImmutable()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkInitialized()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSet(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Deal.t.sol:DealTest": [
            {
                "name": "checkDeal1(address,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkDeal2(address,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkDealNew()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Foundry.t.sol:FoundryTest": [
            {
                "name": "checkAssume(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkEtchConcrete()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkEtchOverwrite()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkGetCode(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Getter.t.sol:GetterTest": [
            {
                "name": "checkGetter(uint256)",
                "exitcode": 1,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/HalmosCheatCode.t.sol:HalmosCheatCodeTest": [
            {
                "name": "checkFailUnknownCheatcode()",
                "exitcode": 1,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolLabel()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolicAddress()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolicBool()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolicBytes()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolicBytes32()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolicUint()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSymbolicUint256()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Library.t.sol:LibraryTest": [
            {
                "name": "checkAdd(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/LibraryLinking.t.sol:LibTest": [],
        "test/LibraryLinking.t.sol:LibTest2": [
            {
                "name": "checkBar()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/List.t.sol:ListTest": [
            {
                "name": "checkAdd(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkRemove()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSet(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/List.t.sol:ListTestTest": [
            {
                "name": "checkAdd(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkRemove()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSet(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Math.t.sol:MathTest": [
            {
                "name": "checkAvg(uint256,uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestContract": [
            {
                "name": "checkLoop3(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop3Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestFunction": [
            {
                "name": "checkLoop2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop2Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop3(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop3Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestNone": [
            {
                "name": "checkLoop2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop2Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestOverwrite": [
            {
                "name": "checkLoop3(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop3Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop4(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop4Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestSetup": [
            {
                "name": "checkLoop2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkLoop2Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Opcode.t.sol:OpcodeTest": [
            {
                "name": "checkPush0()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_SIGNEXTEND(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Prank.t.sol:PrankSetUpTest": [
            {
                "name": "checkPrank(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Prank.t.sol:PrankTest": [
            {
                "name": "checkPrank(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkPrankExternal(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkPrankExternalSelf(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkPrankInternal(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkPrankNew(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkPrankReset1(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkPrankReset2(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkStartPrank(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkStopPrank1(address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkStopPrank2()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Proxy.t.sol:ProxyTest": [
            {
                "name": "checkFoo(uint256)",
                "exitcode": 1,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Reset.t.sol:ResetTest": [
            {
                "name": "checkFoo()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Revert.t.sol:CTest": [
            {
                "name": "checkRevert1(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkRevert2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Send.t.sol:SendTest": [
            {
                "name": "checkSend(address,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSendSelf(address,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Setup.t.sol:SetupTest": [
            {
                "name": "checkTrue()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SetupPlus.t.sol:SetupPlusTest": [
            {
                "name": "checkSetup()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SetupPlus.t.sol:SetupPlusTestB": [
            {
                "name": "checkSetup()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SetupSymbolic.t.sol:SetupSymbolicTest": [
            {
                "name": "checkFoo()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SignExtend.t.sol:SignExtendTest": [
            {
                "name": "checkSignExtend(int16)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Solver.t.sol:SolverTest": [
            {
                "name": "checkFoo(uint256,uint256)",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Storage.t.sol:StorageTest": [
            {
                "name": "checkAddArr1(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkAddArr2(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkAddMap1Arr1(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSetMap1(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSetMap2(uint256,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkSetMap3(uint256,uint256,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Store.t.sol:StoreTest": [
            {
                "name": "checkStoreArray(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkStoreMapping(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkStoreScalar(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Struct.t.sol:StructTest": [
            {
                "name": "checkStruct((uint256,uint256))",
                "exitcode": 2,
                "num_models": null,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/TestConstructor.t.sol:TestConstructorTest": [
            {
                "name": "checkValue()",
                "exitcode": 1,
                "num_models": 1,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/UnsupportedOpcode.t.sol:X": [
            {
                "name": "checkFoo()",
                "exitcode": 1,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/UnsupportedOpcode.t.sol:Y": [
            {
                "name": "checkFoo()",
                "exitcode": 1,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/UnsupportedOpcode.t.sol:Z": [
            {
                "name": "checkFoo()",
                "exitcode": 1,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Warp.t.sol:WarpTest": [
            {
                "name": "checkWarp(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarpExternal(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarpExternalSelf(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarpInternal(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarpNew(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarpReset(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "checkWarpSetUp()",
                "exitcode": 0,
                "num_models": 0,
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ]
    }
}