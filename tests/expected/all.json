{
    "exitcode": 1,
    "test_results": {
        "test/Invalid.t.sol:OldCompilerTest": [
            {
                "name": "check_assert(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_myAssert(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_x_uint256": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Arith.t.sol:ArithTest": [
            {
                "name": "check_Exp(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Mod(uint256,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/AssertTest.sol:CTest": [
            {
                "name": "check_bar()",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {}
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_foo()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Block.t.sol:BlockCheatCodeTest": [
            {
                "name": "check_chainId(uint64)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_coinbase(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_difficulty(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_fee(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_roll(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Byte.t.sol:ByteTest": [
            {
                "name": "check_byte(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Byte.t.sol:SymbolicByteTest": [
            {
                "name": "check_SymbolicByteIndex(uint8,uint8)",
                "exitcode": 1,
                "num_models": 2,
                "models": [
                    {
                        "p_i_uint8": "0x0",
                        "p_x_uint8": "0x2b"
                    },
                    {
                        "p_i_uint8": "0x1f",
                        "p_x_uint8": "0x3"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Call.t.sol:CallTest": [
            {
                "name": "check_call(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_callcode(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_delegatecall(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_staticcall(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Console.t.sol:ConsoleTest": [
            {
                "name": "check_log()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Const.t.sol:ConstTest": [
            {
                "name": "check_Const()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Const.t.sol:ConstTestTest": [
            {
                "name": "check_Const()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Constructor.t.sol:ConstructorTest": [
            {
                "name": "check_constructor()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_setCodesize()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Counter.t.sol:CounterTest": [
            {
                "name": "check_div_1(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_div_2(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_foo(uint256,uint256,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_inc()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_incBy(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_incOpt()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_loopConst()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_loopConstIf()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_loopDoWhile(uint8)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_loopFor(uint8)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_loopWhile(uint8)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_mulDiv(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_set(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_setString(uint256,string,uint256,string,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_setSum(uint248,uint248)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Create.t.sol:CreateTest": [
            {
                "name": "check_const()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_immutable()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_initialized()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_set(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Create2.t.sol:Create2Test": [
            {
                "name": "check_create2(uint256,uint256,bytes32)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_create2_caller(address,uint256,uint256,bytes32)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_create2_collision(uint256,uint256,bytes32)",
                "exitcode": 1,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_create2_collision_alias(uint256,uint256,bytes32)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_salt_bytes32": "0x0",
                        "p_y_uint256": "0x0",
                        "p_x_uint256": "0x0"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_create2_concrete()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_create2_no_collision_1(uint256,uint256,bytes32,bytes32)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_create2_no_collision_2(uint256,uint256,bytes32)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Deal.t.sol:DealTest": [
            {
                "name": "check_deal_1(address,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_deal_2(address,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_deal_new()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Foundry.t.sol:FoundryTest": [
            {
                "name": "check_assume(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_deployCode(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_etch_Concrete()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_etch_Overwrite()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Getter.t.sol:GetterTest": [
            {
                "name": "check_Getter(uint256)",
                "exitcode": 1,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/HalmosCheatCode.t.sol:HalmosCheatCodeTest": [
            {
                "name": "check_FailUnknownCheatcode()",
                "exitcode": 1,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_SymbolLabel()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_createAddress()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_createBool()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_createBytes()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_createBytes32()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_createUint()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_createUint256()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Library.t.sol:LibraryTest": [
            {
                "name": "check_add(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/LibraryLinking.t.sol:LibTest": [
            {
                "name": "check_foo()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/LibraryLinking.t.sol:LibTest2": [
            {
                "name": "check_bar()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/List.t.sol:ListTest": [
            {
                "name": "check_add(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_remove()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_set(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/List.t.sol:ListTestTest": [
            {
                "name": "check_add(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_remove()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_set(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Math.t.sol:MathTest": [
            {
                "name": "check_Avg(uint256,uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_a_uint256": "0x209783b74e6c1ecfeee4bf9a3b7aafbb899cb2035ab51226f10e0a0ae36d5f34",
                        "p_b_uint256": "0xe4001c386d6fc52402d7265cf32750426d634df8932adbb90ee88aeba34b8c98"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestContract": [
            {
                "name": "check_Loop3(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop3Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x3"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestFunction": [
            {
                "name": "check_Loop2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop2Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x2"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop3(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop3Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x3"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestNone": [
            {
                "name": "check_Loop2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop2Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x2"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestOverwrite": [
            {
                "name": "check_Loop3(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop3Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x3"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop4(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop4Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x4"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Natspec.t.sol:NatspecTestSetup": [
            {
                "name": "check_Loop2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Loop2Fail(uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_n_uint256": "0x2"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Opcode.t.sol:OpcodeTest": [
            {
                "name": "check_PUSH0()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_SIGNEXTEND(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Prank.t.sol:PrankSetUpTest": [
            {
                "name": "check_prank(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Prank.t.sol:PrankTest": [
            {
                "name": "check_prank(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_Constructor(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_External(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_ExternalSelf(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_Internal(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_New(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_Reset1(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_prank_Reset2(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_startPrank(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_stopPrank_1(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_stopPrank_2()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Proxy.t.sol:ProxyTest": [
            {
                "name": "check_foo(uint256,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Reset.t.sol:ResetTest": [
            {
                "name": "check_foo()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Revert.t.sol:CTest": [
            {
                "name": "check_Revert1(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_Revert2(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_RevertBalance(bool,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_RevertCode(address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Send.t.sol:SendTest": [
            {
                "name": "check_Send(address,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_SendSelf(address,uint256,address)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Setup.t.sol:SetupFailTest": [],
        "test/Setup.t.sol:SetupTest": [
            {
                "name": "check_True()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SetupPlus.t.sol:SetupPlusTest": [
            {
                "name": "check_Setup()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SetupPlus.t.sol:SetupPlusTestB": [
            {
                "name": "check_Setup()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SetupSymbolic.t.sol:SetupSymbolicTest": [
            {
                "name": "check_True()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SignExtend.t.sol:SignExtendTest": [
            {
                "name": "check_SIGNEXTEND(int16)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SignedDiv.t.sol:TestBadWadMul": [
            {
                "name": "check_wadMul_solEquivalent(int256,int256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_x_int256": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                        "p_y_int256": "0x8000000000000000000000000000000000000000000000000000000000000000"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/SignedDiv.t.sol:TestGoodWadMul": [
            {
                "name": "check_wadMul_solEquivalent(int256,int256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Solver.t.sol:SolverTest": [
            {
                "name": "check_foo(uint256,uint256)",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_a_uint256": "0x61900000000000000000000000000000",
                        "p_b_uint256": "0x861b00000000000000000000000000001"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Storage.t.sol:StorageTest": [
            {
                "name": "check_addArr1(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_addArr2(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_addMap1Arr1(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_setMap1(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_setMap2(uint256,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_setMap3(uint256,uint256,uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Store.t.sol:StoreTest": [
            {
                "name": "check_store_Array(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_store_Mapping(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_store_Scalar(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Struct.t.sol:StructTest": [
            {
                "name": "check_Struct((uint256,uint256))",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_p.x_uint256": "0x0",
                        "p_p.y_uint256": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_StructArray((uint256,uint256)[],(uint256,uint256)[2])",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_q[1].y_uint256": "0x0",
                        "p_p[0].y_uint256": "0x8000000000000000000000000000000000000000000000000000000000000000",
                        "p_q[0].x_uint256": "0x0",
                        "p_q[0].y_uint256": "0x0",
                        "p_p[0].x_uint256": "0x7fffffffffffffffffffffffffffffffc0000000000000000000000000000000",
                        "p_q[1].x_uint256": "0x100000000000000000000"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_StructArrayArray((uint256,uint256)[][],(uint256,uint256)[2][],(uint256,uint256)[][2],(uint256,uint256)[2][2])",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_s[0][1].x_uint256": "0xdffffffffbffffffffeffffffffeff3ffffff7fffffffffffc37ffffffe7ffee",
                        "p_q[1][0].x_uint256": "0xdffffbfff6fffdffdfbdf3aeffbff7f77eaffd7f7df77ff2dffbfa4ff8000000",
                        "p_q[1][1].x_uint256": "0xffedb7ffff7ffffff7fbfdffe7bffffffffefbf07dfffffcfe7cddffda885400",
                        "p_s[1][1].y_uint256": "0xffdfddffffffffffffffffdfffff2effffffffffbfffffeffffffffdbffff7fd",
                        "p_s[0][0].x_uint256": "0xbfde7bfffffdffffc5fbffffebacffff7fbebfffdfbffffde2fea37fff1cdfbe",
                        "p_r[0][0].y_uint256": "0x9ded87fffffffffffffffffff7fdfffffffffefbbfffffffffffc687fdffff84",
                        "p_r[0][1].y_uint256": "0xdffafbffffffbffffdf4ffeff3fdfbf7ffdffeffffffeefffffebc7ffbf7fbfe",
                        "p_q[0][1].x_uint256": "0xe3bf7bffffffffffdf7fff6ffaffbcffffdfffdbffdffdfd7ffe1bfffcdebc00",
                        "p_r[0][0].x_uint256": "0x7ff507ffffffffffffffffff7ffe5fffffffffffffffff800000000000000000",
                        "p_q[1][0].y_uint256": "0xffdffffffffe7ffffffffffffffffffffffffffffffffffffefffffffffffffe",
                        "p_r[1][0].x_uint256": "0x7cfff5ffdffffffffffffffffffff0fffffffbffe1ffffffffc7fffcffd80000",
                        "p_r[1][1].y_uint256": "0xfaffaeffffffffffffffffffffffffffffffffffffbfbfe3ffffffffffffff9d",
                        "p_q[0][0].y_uint256": "0xfffffffffffe7fffffffffffffffffffffffffffffffffffaffd7febffffffff",
                        "p_q[0][1].y_uint256": "0x5fffd3fffffffffffffff7dfffffcffdfffffbfffffffffffffffffdfffffffe",
                        "p_s[0][1].y_uint256": "0x72fdd7ffffffffffffff083fffdfffbfffffffffbe7fffbfffffffff40000000",
                        "p_s[1][0].x_uint256": "0xf6bfff3fffffffffffffffffffffffffffffffffffc13fffffffffef1ffff860",
                        "p_q[1][1].y_uint256": "0xe3ffa8fffdfebc7c773f7d5e7af5f7ef4d7fdab7a76da3f43ed6f49dffc3bc12",
                        "p_s[1][0].y_uint256": "0xffffcfffffc0ffffffffffffffffffffffffffffffffffff7fe27ffadfffff80",
                        "p_r[1][1].x_uint256": "0x7dab1bf3ff7ff4ffc043fca6340efd0c5158001002fffe5a75f7e7fcfc000000",
                        "p_r[0][1].x_uint256": "0x5efffdffffffbfffffffffffffffffffffffffffffffffffffffffffff400c1e",
                        "p_p[0][0].x_uint256": "0xdffdbbffffffffffffffffffffffffffffffffffdf7ffffffffff37ffefffffe",
                        "p_q[0][0].x_uint256": "0xff9ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffe",
                        "p_s[1][1].x_uint256": "0x2004000420a00000118000000000800000002200000000000010000400000480",
                        "p_r[1][0].y_uint256": "0xfff7fffffffdfffffffffffffffac7ff7fefffffffdfffd77f7da77fffffdf82",
                        "p_p[0][0].y_uint256": "0xbe7fffbfff41fffffffffffffffffffffffffffffffefffcd11fffff00000000",
                        "p_s[0][0].y_uint256": "0xdf5fb7fffcffffffffffffffffffffffffffffffffffffefffffffb2fffffe7e"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Struct.t.sol:StructTest2": [
            {
                "name": "check_S((uint256,uint256[],uint256),(uint256,(uint256,uint256[],uint256),uint256[],(uint256,uint256[],uint256)[],uint256[1],(uint256,uint256[],uint256)[][])[])",
                "exitcode": 1,
                "num_models": 1,
                "models": [
                    {
                        "p_s[0].f4[0].y[1]_uint256": "0x633eff6ffde3fffe7ffbb3fd1cde5f6cd5d73fdfffe9bbfffefca37eed1fe3f6",
                        "p_s[0].f6[0][0].z_uint256": "0xf9fffffffff3fffffeffffffffffffffffffffffffffffffffffffffbe7ff38f",
                        "p_s[0].f4[1].z_uint256": "0xdfffffffdffffbfffffde3fff7dffeea7fffcfbf9ffffeffffffdaffde010000",
                        "p_s[0].f6[1][1].y[1]_uint256": "0x2ffffffffffbdfbff87ffffdbbdffef7ffbffffef7eff8ffed7fff87fefa6b0e",
                        "p_s[0].f6[1][0].x_uint256": "0xfffffffff0fffffffffffff80248fffffffffffffcfffeb07fffff4000000000",
                        "p_s[0].f6[0][0].y[1]_uint256": "0xf7ffffffffffffffffffffffffffffffffffffff4dfeefafbfbffbb3efffc000",
                        "p_p.y[1]_uint256": "0x7fffffffffffffffffffffffffffffffffffffff7ff0ffffffffffdbfffffffe",
                        "p_s[0].f1_uint256": "0xc7ffffffff3ffffffffffffffffbbfffffeffff7efdfffffffffbfffefffcdf4",
                        "p_s[0].f2.y[1]_uint256": "0xffffffffff3fdff7fffc3ffffff8fffefbfc2eff5ffffffffffffffffaf3ff80",
                        "p_s[0].f2.x_uint256": "0x15dfffffffffffffffffffffffffffedffffffffffffffffffffffe000000000",
                        "p_s[0].f6[0][0].x_uint256": "0xfbfffffffffffffffffffffffdbf3ffffffffff83f3fdfcfc3ff7fffffffffff",
                        "p_s[0].f4[0].x_uint256": "0x2f7ffefffec7fb8d97fdfffffbdff7ff9fbe7b7ffffdeff7ffd3ffc7debfff2c",
                        "p_s[0].f6[0][1].y[1]_uint256": "0xffffbffffbffffffeffeffffffffffffff9fffffffffe21ffffcffffffe40000",
                        "p_s[0].f5[0]_uint256": "0x93fffffffbfdffffffff03ffffffffffffffffbfffffffefffffce3cbffd1ff7",
                        "p_s[0].f6[1][1].x_uint256": "0x7fffffffffbfffffffffffffffffffffffffff80ffefefbffc3fc7ff3ffff200",
                        "p_s[0].f6[0][0].y[0]_uint256": "0xe6e1fffffffefffffffffffffffff8ffffffffffffffffffffffff7fcbffdff0",
                        "p_s[0].f6[0][1].x_uint256": "0x687ffffffffffffffffffffffffd001ffffffffffffffffffffffe2ffffffff1",
                        "p_s[0].f3[0]_uint256": "0x2ddffffffffffffffffffffffffffff1ffffdfffffffffffffffffefffffffff",
                        "p_s[0].f4[1].y[1]_uint256": "0x1cc5fffffcfffd5ffdffdfbffd9c2d289b387fffff6fbfff3cffc7d7fe1fbf72",
                        "p_s[0].f2.y[0]_uint256": "0xfff7fb77dbf79ef9edfbdfbf2fef7ef7ea5fdfffffdcfeeaf7ffe60000000000",
                        "p_s[0].f6[1][0].z_uint256": "0x3ffffffff7fffdf03ffffffffffffffffffffe5fffff7ffffff3fbffd8000000",
                        "p_p.z_uint256": "0x0",
                        "p_s[0].f4[1].y[0]_uint256": "0xfeceb8c9f47ffa7fdfbf9dfbef77ffbd7c200000000000000000000000000000",
                        "p_s[0].f4[0].z_uint256": "0x3ffffefffe2fbff7ffaffffffe77d7c1ff7fd05f1ffdffbffbfefffffff7fc80",
                        "p_p.y[0]_uint256": "0xc083fffffffffffffffffffffffffffffffe5fffffffffffffffffffffffff00",
                        "p_s[0].f6[1][0].y[1]_uint256": "0xffbfffffb9ebf7ffdfffffffff7fffffffc7fffdfff3fffffffdff6fffebffff",
                        "p_s[0].f4[1].x_uint256": "0xffffffffdfefefefffefdfffffffffffffdfffffffffffbfffffffbffdf9fe00",
                        "p_s[0].f6[1][1].y[0]_uint256": "0x1feffffffffffdffd3feffffffffcffffffbf107ffffffffffffffff9fffaf85",
                        "p_s[0].f6[0][1].y[0]_uint256": "0x7fffbfffffffffffffffffffffffffffffffffffffffdffffffffd6fff200000",
                        "p_s[0].f2.z_uint256": "0xffffffffffffffffffeefcffffff3fffffffffb6effefffffffe59898c000000",
                        "p_s[0].f6[1][1].z_uint256": "0xafeffffffffffffffcfffefffffff7fffffffff7fffffffffffffffbbffffcff",
                        "p_s[0].f4[0].y[0]_uint256": "0xef7ffffffffffffffffffc07ffffffffffffffcff5ffffffffffffffffff5e17",
                        "p_s[0].f3[1]_uint256": "0xffffffffdffff7fffffbffffffffffebffffff2fffffffffff8fffbfffbd7e00",
                        "p_s[0].f6[0][1].z_uint256": "0xef7e7ffffffefffffffdfffffffffeffffffffffffffffffffffffffd2800000",
                        "p_p.x_uint256": "0x24fffffffffffffffffffffffffffffffff1bffffffffffffffffe0000000000",
                        "p_s[0].f6[1][0].y[0]_uint256": "0xae3bfffffffffffffffffffffffeffffffffffffffffffffffffffffffffff0e"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/TestConstructor.t.sol:TestConstructorTest": [
            {
                "name": "check_value()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Token.t.sol:TokenTest": [
            {
                "name": "check_BalanceInvariant()",
                "exitcode": 1,
                "num_models": 2,
                "models": [
                    {
                        "halmos_receiver_address_05": "0x0",
                        "halmos_amount_uint256_06": "0x3c13e8bfffe0000",
                        "halmos_amount_uint256_02": "0x0",
                        "halmos_data_bytes_09": "0x30e0789e000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003fdffeafffbfc000000004",
                        "halmos_caller_address_07": "0x0",
                        "halmos_amount_uint256_04": "0x200025cafdfbfc000000000",
                        "halmos_others_address_08": "0xd9d173b00040c3d0000012200010100021900001",
                        "halmos_receiver_address_03": "0x20000000000000000000000000000000000",
                        "halmos_receiver_address_01": "0x10000000000000000000000001008000000"
                    },
                    {
                        "halmos_receiver_address_05": "0x0",
                        "halmos_amount_uint256_06": "0xffff07f80000000000000",
                        "halmos_amount_uint256_02": "0x14002038000173ee7fffffe",
                        "halmos_data_bytes_09": "0x30e0789e00000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e74a689fd7fffffffff17d",
                        "halmos_caller_address_07": "0x2001000602010000000000000080080001",
                        "halmos_amount_uint256_04": "0x1e74a689fd7fffffffff17d",
                        "halmos_others_address_08": "0x2000000000000000000000000000000000",
                        "halmos_receiver_address_03": "0x2000000000000000000000000000000000",
                        "halmos_receiver_address_01": "0x0"
                    }
                ],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/UnsupportedOpcode.t.sol:X": [
            {
                "name": "check_foo()",
                "exitcode": 1,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/UnsupportedOpcode.t.sol:Y": [
            {
                "name": "check_foo()",
                "exitcode": 1,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/UnsupportedOpcode.t.sol:Z": [
            {
                "name": "check_foo()",
                "exitcode": 1,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ],
        "test/Warp.t.sol:WarpTest": [
            {
                "name": "check_warp(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp_External(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp_ExternalSelf(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp_Internal(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp_New(uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp_Reset(uint256,uint256)",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            },
            {
                "name": "check_warp_SetUp()",
                "exitcode": 0,
                "num_models": 0,
                "models": [],
                "num_paths": null,
                "time": null,
                "num_bounded_loops": null
            }
        ]
    }
}